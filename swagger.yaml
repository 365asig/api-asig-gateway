openapi: 3.0.0
info:
  title: API 365Asig
  version: 1.0.0

paths:
  # ------------------ Travel Medical ------------------
  /travel-medical/destinations:
    get:
      summary: Get list of travel destinations
      tags: [Travel Medical]
      responses:
        '200':
          description: List of available countries

  /travel-medical/products:
    get:
      summary: Get list of travel insurance products
      tags: [Travel Medical]
      responses:
        '200':
          description: List of available products

  /travel-medical/regions:
    get:
      summary: Get list of travel insurance regions
      tags: [Travel Medical]
      responses:
        '200':
          description: List of regions

  /travel-medical/scopes:
    get:
      summary: Get list of travel insurance scopes
      tags: [Travel Medical]
      responses:
        '200':
          description: List of scopes

  /travel-medical/donaris/calculate:
    post:
      summary: Calculate Travel Medical Insurance
      tags: [Travel Medical]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TravelCalculateRequest'
      responses:
        '200':
          description: Calculation result

  /travel-medical/donaris/save:
    post:
      summary: Save Travel Medical Insurance request
      tags: [Travel Medical]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TravelCalculateRequest'
      responses:
        '200':
          description: Save response

  /travel-medical/donaris/{id}/file/{type}:
    get:
      summary: Get Travel Medical Document
      tags: [Travel Medical]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "8770743"
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum: [InsurancePolicy, Contract, Demand]
            example: InsurancePolicy
      responses:
        '200':
          description: Base64 encoded PDF document
          content:
            application/json:
              schema:
                type: object
                properties:
                  filename:
                    type: string
                  content:
                    type: string
                    format: byte

  # ------------------ RCA ------------------
  /rca/calculate:
    post:
      summary: Calculate RCA
      tags: [Rca]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RcaRequest'
      responses:
        '200':
          description: OK

  /rca/save:
    post:
      summary: Save RCA data
      tags: [Rca]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RcaSaveRequest'
      responses:
        '200':
          description: OK

  /rca/{id}/document:
    get:
      summary: Get RCA document by ID
      tags: [Rca]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "8744747"
      responses:
        '200':
          description: JSON response with file information or null
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    nullable: true
                  data:
                    type: object
                    nullable: true

  /rca/file/{id}/{type}:
    get:
      summary: Get RCA file by type
      tags: [Rca]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "8744747"
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum: [InsurancePolicy, Contract, Demand]
            example: InsurancePolicy
      responses:
        '200':
          description: Base64 encoded PDF file
          content:
            application/json:
              schema:
                type: object
                properties:
                  filename:
                    type: string
                  content:
                    type: string
                    format: byte

  /rca/documents:
    post:
      summary: Get RCA Documents List (search)
      tags: [Rca]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                start:
                  type: string
                  format: date
                  example: "2025-07-01"
                end:
                  type: string
                  format: date
                  example: "2025-07-15"
      responses:
        '200':
          description: List of RCA documents
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/RcaDocument'

  # ------------------ Green Card ------------------
  /green-card/calculate:
    post:
      summary: Calculate Green Card
      tags: [Green Card]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GreenCardCalculateRequest'
      responses:
        '200':
          description: OK

  /green-card/calculate/save:
    post:
      summary: Save Green Card calculation
      tags: [Green Card]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GreenCardSaveRequest'
      responses:
        '200':
          description: OK

  /green-card/{id}/document:
    get:
      summary: Get Green Card Document by ID
      tags: [Green Card]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "8744747"
      responses:
        '200':
          description: Green Card Document object
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object

  /green-card/file/{id}/{type}:
    get:
      summary: Get Green Card Document
      tags: [Green Card]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "8744747"
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum: [InsurancePolicy, Contract, Demand]
            example: InsurancePolicy
      responses:
        '200':
          description: Base64 encoded PDF
          content:
            application/json:
              schema:
                type: object
                properties:
                  filename:
                    type: string
                  content:
                    type: string
                    format: byte

components:
  schemas:
    # ------------------ RCA ------------------
    RcaRequest:
      type: object
      required: [id, certificate]
      properties:
        id:
          type: string
          example: "2000000000000"
        certificate:
          type: string
          example: "23456789"
        trailer_id:
          type: string
          example: "298705544"

    RcaSaveRequest:
      type: object
      required: [id, certificate, startDate, possessionBase, personType, company, email, phone]
      properties:
        id:
          type: string
          example: "2009042000670"
        certificate:
          type: string
          example: "238200584"
        startDate:
          type: string
          format: date
          example: "2025-05-20"
        possessionBase:
          type: string
          example: "Property"
        personType:
          type: integer
          example: 1
        company:
          type: string
          example: "100000000000"
        email:
          type: string
          format: email
          example: "test@test.com"
        phone:
          type: string
          example: "+373600000000"

    RcaDocument:
      type: object
      properties:
        Id:
          type: integer
          example: 8800957
        ContractNumber:
          type: string
          example: "TEST-008800957"
        EmployeeId:
          type: integer
          example: 36023
        CompanyId:
          type: integer
          example: 88
        BrokerAgentId:
          type: integer
          example: 0
        CompanyPopId:
          type: integer
          example: 0
        PersonId:
          type: integer
          example: 776056

    # ------------------ Green Card ------------------
    GreenCardCalculateRequest:
      type: object
      required: [id, certificate, greenCardZone, termInsurance]
      properties:
        id:
          type: string
          example: "2004033045913"
        certificate:
          type: string
          example: "197103320"
        greenCardZone:
          type: string
          example: "Z1"
        termInsurance:
          type: string
          example: "m2"

    GreenCardSaveRequest:
      type: object
      required: [id, certificate, startDate, possessionBase, termInsurance, greenCardZone, personType, company, email, phone]
      properties:
        id:
          type: string
          example: "2009042000670"
        certificate:
          type: string
          example: "238200584"
        startDate:
          type: string
          format: date
          example: "2025-05-20"
        possessionBase:
          type: string
          example: "Property"
        termInsurance:
          type: string
          example: "d15"
        greenCardZone:
          type: string
          example: "Z1"
        personType:
          type: integer
          example: 1
        company:
          type: string
          example: "100000000000"
        email:
          type: string
          format: email
          example: "test@test.com"
        phone:
          type: string
          example: "+373600000000"

    # ------------------ Travel Medical ------------------
    TravelCalculateRequest:
      type: object
      required: [startDate, endDate, destination, scope, product_id, persons]
      properties:
        destination:
          type: string
          example: "73b2c1d7-a63d-4e8e-85cd-0347fe360723"
        scope:
          type: string
          example: "16c00584-d3a2-11e9-81db-0cc47a1e4c63"
        startDate:
          type: string
          format: date
          example: "2025-07-29"
        endDate:
          type: string
          format: date
          example: "2025-08-08"
        product_id:
          type: string
          example: "04951029-1df2-11e7-8125-0cc47a1e4c63"
        covid_coverage:
          type: boolean
          nullable: true
          example: true
        sport:
          type: string
          nullable: true
          example: "1324356347373737"
        persons:
          type: array
          minItems: 1
          items:
            type: object
            required: [idnp, fullName, birthday]
            properties:
              idnp:
                type: string
                example: "1234567890123"
              fullName:
                type: string
                example: "Ion Popescu"
              birthday:
                type: string
                format: date
                example: "1990-02-21"
